<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <title>Gerenciar Produtos</title>
  <link rel="stylesheet" href="/css/style.css" />
</head>
<body>
  <main>
    <h2>Gerenciar Produtos com Cores e Tamanhos</h2>

    <!-- Formulário principal para criar/atualizar produto -->
    <form id="produtoForm" enctype="multipart/form-data">
      <input type="hidden" id="produto_id" />

      <label for="nome">Nome do Produto:</label>
      <input type="text" id="nome" required />

      <label for="descricao">Descrição:</label>
      <textarea id="descricao" required></textarea>

      <label for="preco">Preço:</label>
      <input type="number" id="preco" step="0.01" required />

      <label for="estoque">Estoque:</label>
      <input type="number" id="estoque" required />

      <label for="categoria_id">Categoria:</label>
      <select id="categoria_id" required></select>

      <label for="marca_id">Marca:</label>
      <select id="marca_id" required></select>

      <!-- Seção de variações (cor + tamanho) -->
      <h3>Variações (Cor + Tamanho)</h3>
      <div id="variacoes-container">
        <!-- Selecionar Cor -->
        <label for="cor-select">Cor:</label>
        <select id="cor-select"></select>

        <!-- Selecionar Tamanho -->
        <label for="tamanho-select">Tamanho:</label>
        <select id="tamanho-select"></select>

        <!-- Quantidade -->
        <label for="quantidade-var">Quantidade:</label>
        <input type="number" id="quantidade-var" min="1" />

        <!-- Botão de adicionar variação -->
        <button type="button" onclick="adicionarVariacao()">Adicionar Variação</button>
      </div>

      <!-- Lista das variações adicionadas -->
      <ul id="variacoes-list"></ul>

      <!-- Imagem e vídeo gerais do produto -->
      <label for="imagem">Imagem do Produto (Geral):</label>
      <input type="file" id="imagem" accept="image/*" />

      <label for="video">Vídeo do Produto (opcional):</label>
      <input type="file" id="video" accept="video/*" />

      <button type="submit" id="submitBtn">Cadastrar</button>
    </form>

    <!-- Tabela de Produtos Existentes -->
    <div class="table-container">
      <h3>Produtos Cadastrados</h3>
      <table>
        <thead>
          <tr>
            <th>ID</th>
            <th>Nome</th>
            <th>Preço</th>
            <th>Estoque</th>
            <th>Imagem</th>
            <th>Vídeo</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody id="produtoList"></tbody>
      </table>
    </div>
  </main>

  <script>
    // Arrays para armazenar os dados carregados
    let variacoesSelecionadas = []; // [{ cor_id, tamanho_id, quantidade, imagem }, ...]
    let produtosData = [];         // Dados dos produtos carregados da API

    // 1. Carregamento de dados iniciais (produtos, cores, tamanhos, marcas, categorias)
    async function carregarProdutos() {
      const token = localStorage.getItem("token");
      if (!token) {
        alert("Usuário não autenticado!");
        window.location.href = "/auth/login";
        return;
      }

      try {
        const response = await fetch("http://localhost:3001/produtos", {
          headers: { Authorization: `Bearer ${token}` },
        });

        if (!response.ok) {
          const txt = await response.text();
          throw new Error(`Erro ao carregar produtos: ${response.status}\n${txt}`);
        }

        produtosData = await response.json();
        const tabela = document.getElementById("produtoList");
        tabela.innerHTML = "";

        produtosData.forEach((produto) => {
          tabela.innerHTML += `
            <tr>
              <td>${produto.id}</td>
              <td>${produto.nome}</td>
              <td>R$ ${Number(produto.preco).toFixed(2)}</td>
              <td>${produto.estoque}</td>
              <td>${
                produto.imagem_url
                  ? `<img src="${produto.imagem_url}" width="50" alt="${produto.nome}" />`
                  : "Sem imagem"
              }</td>
              <td>${
                produto.video_url
                  ? `<a href="${produto.video_url}" target="_blank">Ver Vídeo</a>`
                  : "Sem vídeo"
              }</td>
              <td>
                <button onclick="editarProduto(${produto.id})">Editar</button>
                <button onclick="deletarProduto(${produto.id})">Excluir</button>
              </td>
            </tr>
          `;
        });
      } catch (err) {
        console.error(err);
        alert("Não foi possível carregar os produtos.");
      }
    }

    async function carregarCores() {
      try {
        const response = await fetch("http://localhost:3001/cores");
        if (!response.ok) throw new Error("Erro ao carregar cores");
        const cores = await response.json();
        const corSelect = document.getElementById("cor-select");
        corSelect.innerHTML = "";
        cores.forEach((cor) => {
          corSelect.innerHTML += `<option value="${cor.id}">${cor.nome} (${cor.codigo_hex})</option>`;
        });
      } catch (error) {
        console.error(error);
      }
    }

    async function carregarTamanhos() {
      try {
        const response = await fetch("http://localhost:3001/tamanhos");
        if (!response.ok) throw new Error("Erro ao carregar tamanhos");
        const tamanhos = await response.json();
        const tamanhoSelect = document.getElementById("tamanho-select");
        tamanhoSelect.innerHTML = "";
        tamanhos.forEach((tamanho) => {
          tamanhoSelect.innerHTML += `<option value="${tamanho.id}">${tamanho.nome}</option>`;
        });
      } catch (error) {
        console.error(error);
      }
    }

    async function carregarMarcas() {
      try {
        const response = await fetch("http://localhost:3001/marcas");
        if (!response.ok) throw new Error("Erro ao carregar marcas");
        const marcas = await response.json();
        const marcaSelect = document.getElementById("marca_id");
        marcaSelect.innerHTML = "";
        marcas.forEach((marca) => {
          marcaSelect.innerHTML += `<option value="${marca.id}">${marca.nome}</option>`;
        });
      } catch (error) {
        console.error(error);
      }
    }

    async function carregarCategorias() {
      try {
        const response = await fetch("http://localhost:3001/categorias");
        if (!response.ok) throw new Error("Erro ao carregar categorias");
        const categorias = await response.json();
        const categoriaSelect = document.getElementById("categoria_id");
        categoriaSelect.innerHTML = "";
        categorias.forEach((cat) => {
          categoriaSelect.innerHTML += `<option value="${cat.id}">${cat.nome}</option>`;
        });
      } catch (error) {
        console.error(error);
      }
    }

    // 2. Funções para adicionar/remover variações (cor+tamanho+quantidade)
    function adicionarVariacao() {
      const corSelect = document.getElementById("cor-select");
      const tamanhoSelect = document.getElementById("tamanho-select");
      const quantidadeVar = document.getElementById("quantidade-var");

      if (!quantidadeVar.value || quantidadeVar.value <= 0) {
        alert("Insira uma quantidade válida para a variação.");
        return;
      }

      const corId = corSelect.value;
      const corNome = corSelect.options[corSelect.selectedIndex].text;
      const tamanhoId = tamanhoSelect.value;
      const tamanhoNome = tamanhoSelect.options[tamanhoSelect.selectedIndex].text;
      const qtd = quantidadeVar.value;

      // Evita duplicidade (mesma cor + tamanho)
      if (variacoesSelecionadas.some((v) => v.cor_id == corId && v.tamanho_id == tamanhoId)) {
        alert("Esta variação (cor + tamanho) já foi adicionada.");
        return;
      }

      const itemVar = {
        cor_id: corId,
        tamanho_id: tamanhoId,
        quantidade: qtd,
      };
      variacoesSelecionadas.push(itemVar);

      // Renderiza no HTML
      const ulVariacoes = document.getElementById("variacoes-list");
      const li = document.createElement("li");
      li.id = `var-item-${corId}-${tamanhoId}`;
      li.innerHTML = `
        ${corNome} / ${tamanhoNome} - Qtd: ${qtd}
        <input type="file" id="imagem_cor_${corId}_tam_${tamanhoId}" accept="image/*" />
        <button type="button" onclick="removerVariacao('${corId}','${tamanhoId}')">Remover</button>
      `;
      ulVariacoes.appendChild(li);

      // Limpa o campo de quantidade
      quantidadeVar.value = "";
    }

    function removerVariacao(corId, tamId) {
      variacoesSelecionadas = variacoesSelecionadas.filter(
        (v) => !(v.cor_id == corId && v.tamanho_id == tamId)
      );
      const li = document.getElementById(`var-item-${corId}-${tamId}`);
      if (li) li.remove();
    }

    // 3. Excluir Produto
    async function deletarProduto(id) {
      const token = localStorage.getItem("token");
      if (!token) {
        alert("Usuário não autenticado!");
        return;
      }

      try {
        const response = await fetch(`http://localhost:3001/produtos/${id}`, {
          method: "DELETE",
          headers: { Authorization: `Bearer ${token}` },
        });
        if (!response.ok) {
          const txt = await response.text();
          throw new Error(`Erro ao excluir produto: ${response.status}\n${txt}`);
        }
        carregarProdutos();
      } catch (error) {
        console.error(error);
        alert("Não foi possível excluir o produto.");
      }
    }

    // 4. Editar Produto
    function editarProduto(id) {
      const produto = produtosData.find((p) => p.id === id);
      if (!produto) return;

      document.getElementById("produto_id").value = produto.id;
      document.getElementById("nome").value = produto.nome;
      document.getElementById("descricao").value = produto.descricao;
      document.getElementById("preco").value = produto.preco;
      document.getElementById("estoque").value = produto.estoque;
      document.getElementById("categoria_id").value = produto.categoria_id;
      document.getElementById("marca_id").value = produto.marca_id;

      // Reseta variações
      variacoesSelecionadas = [];
      document.getElementById("variacoes-list").innerHTML = "";

      // Se o back-end retornar algo como produto.ProdutoVariacaos, adaptamos
      if (produto.ProdutoVariacaos && produto.ProdutoVariacaos.length > 0) {
        produto.ProdutoVariacaos.forEach((varItem) => {
          const corId = varItem.cor_id;
          const tamId = varItem.tamanho_id;
          const qtd = varItem.quantidade;

          variacoesSelecionadas.push({
            cor_id: corId,
            tamanho_id: tamId,
            quantidade: qtd,
          });

          // Renderiza no HTML
          const ulVar = document.getElementById("variacoes-list");
          const li = document.createElement("li");
          li.id = `var-item-${corId}-${tamId}`;
          li.innerHTML = `
            Cor ID: ${corId}, Tam ID: ${tamId} - Qtd: ${qtd}
            <input type="file" id="imagem_cor_${corId}_tam_${tamId}" accept="image/*" />
            <button type="button" onclick="removerVariacao('${corId}','${tamId}')">Remover</button>
          `;
          ulVar.appendChild(li);
        });
      }

      document.getElementById("submitBtn").textContent = "Atualizar";
    }

    // 5. Submeter Formulário (Criar/Atualizar)
    document.getElementById("produtoForm").addEventListener("submit", async (event) => {
      event.preventDefault();
      const token = localStorage.getItem("token");
      if (!token) {
        alert("Usuário não autenticado!");
        return;
      }

      const produtoId = document.getElementById("produto_id").value.trim();

      // Monta FormData
      const formData = new FormData();
      formData.append("nome", document.getElementById("nome").value);
      formData.append("descricao", document.getElementById("descricao").value);
      formData.append("preco", document.getElementById("preco").value);
      formData.append("estoque", document.getElementById("estoque").value);
      formData.append("categoria_id", document.getElementById("categoria_id").value);
      formData.append("marca_id", document.getElementById("marca_id").value);

      // Imagem principal
      const imgFile = document.getElementById("imagem").files[0];
      if (imgFile) {
        formData.append("imagem", imgFile);
      }

      // Vídeo principal
      const vidFile = document.getElementById("video").files[0];
      if (vidFile) {
        formData.append("video", vidFile);
      }

      // Variações => cor_id, tamanho_id, quantidade
      formData.append("variacoes", JSON.stringify(variacoesSelecionadas));

      // Para cada variação, se tiver imagem específica, adiciona com o nome ex: "imagem_variacao_1_2"
      variacoesSelecionadas.forEach((v) => {
        const inputFile = document.getElementById(`imagem_cor_${v.cor_id}_tam_${v.tamanho_id}`);
        if (inputFile && inputFile.files.length > 0) {
          formData.append(`imagem_variacao_${v.cor_id}_${v.tamanho_id}`, inputFile.files[0]);
        }
      });

      try {
        let url = "http://localhost:3001/produtos";
        let method = "POST";
        if (produtoId) {
          url = `http://localhost:3001/produtos/${produtoId}`;
          method = "PUT";
        }

        const response = await fetch(url, {
          method,
          headers: { Authorization: `Bearer ${token}` },
          body: formData, // Importante: não setar manualmente o Content-Type
        });

        if (!response.ok) {
          const txt = await response.text();
          throw new Error(`Erro ao salvar produto (${response.status}):\n${txt}`);
        }

        // Resetar form
        document.getElementById("produtoForm").reset();
        document.getElementById("produto_id").value = "";
        variacoesSelecionadas = [];
        document.getElementById("variacoes-list").innerHTML = "";
        document.getElementById("submitBtn").textContent = "Cadastrar";

        // Recarregar a lista
        carregarProdutos();
      } catch (error) {
        console.error(error);
        alert(error.message);
      }
    });

    // 6. Carrega tudo ao iniciar
    (function init() {
      carregarProdutos();
      carregarCores();
      carregarTamanhos();
      carregarMarcas();
      carregarCategorias();
    })();
  </script>
</body>
</html>
